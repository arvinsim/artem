@import url(http://fonts.googleapis.com/css?family=Merriweather:400,400italic,700,700italic,300italic,300,900,900italic|Gentium+Book+Basic);
/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio, canvas, progress, video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/*
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/*
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden], template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active, a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b, strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub, sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 8/9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code, kbd, pre, samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button, input, optgroup, select, textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button, select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button, html input[type="button"], input[type="reset"], input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled], html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner, input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"], input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button, input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button, input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

th, td {
  padding: 0; }

*, *:before, *:after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box; }

html, button, input, select, textarea {
  font-family: 'Merriweather', sans-serif;
  font-size: 16px; }

body {
  max-width: 55em;
  margin-left: auto;
  margin-right: auto;
  color: #031b3f;
  padding-top: 6em; }
  body:after {
    content: " ";
    display: block;
    clear: both; }

a {
  color: #ffba1a; }

h1, h2, h3, h4, h5, h6 {
  font-family: 'Gentium Book Basic', serif; }

p {
  line-height: 1.4rem; }

main {
  width: 65.51724%;
  float: left;
  margin-right: 3.44828%;
  padding: 0 1em; }
  @media (max-width: 768px) {
    main {
      width: 100%;
      float: right;
      margin-right: 0; } }

header {
  width: 31.03448%;
  float: right;
  margin-right: 0; }
  @media (max-width: 768px) {
    header {
      width: 100%;
      float: left;
      margin-right: 25%; }
      header .title, header .description, header section, header footer {
        text-align: center; } }

.date {
  color: #1a71f4;
  font-size: 0.75em; }

header section {
  margin-bottom: 4em; }
header .discipline {
  border-radius: 0.5em;
  color: #031b3f;
  background-color: #ffba1a;
  text-decoration: none;
  font-size: 0.75em;
  padding: 0.3rem;
  margin: 0 0.1rem; }
  header .discipline:hover {
    color: #ffba1a;
    background-color: #031b3f; }
header .site-details {
  text-align: left; }
  header .site-details .title {
    margin: 0; }
    header .site-details .title a {
      text-decoration: none;
      color: #031b3f;
      font-size: 3rem;
      line-height: 1em; }
  header .site-details .description {
    letter-spacing: 0.2rem;
    font-size: 1rem; }

.contact-details .contact {
  color: #0845a1;
  text-decoration: none; }

.sections .section {
  border-radius: 0.5em;
  color: #031b3f;
  background-color: #ffba1a;
  text-decoration: none;
  font-size: 0.75em;
  padding: 0.3rem;
  margin: 0 0.1rem;
  font-weight: bold; }
  .sections .section:hover {
    color: #ffba1a;
    background-color: #031b3f; }

/* A list of post items */
.post-list-item {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 3em;
  line-height: 2em; }
  .post-list-item:after {
    content: " ";
    display: block;
    clear: both; }
  .post-list-item .title {
    margin: 0;
    font-size: 2em; }
    .post-list-item .title a {
      color: #031b3f;
      text-decoration: none;
      font-weight: bold; }
      .post-list-item .title a:hover {
        text-decoration: underline; }
  .post-list-item .tag {
    border-radius: 0.5em;
    color: #031b3f;
    background-color: #ffba1a;
    text-decoration: none;
    font-size: 0.75em;
    padding: 0.3rem;
    margin: 0 0.1rem; }
    .post-list-item .tag:hover {
      color: #ffba1a;
      background-color: #031b3f; }

/* A single post in its entirety */
.post-item .header {
  margin-bottom: 3em; }
  .post-item .header .title {
    font-size: 3em;
    margin: 0.1em 0; }
  .post-item .header .tag {
    border-radius: 0.5em;
    color: #031b3f;
    background-color: #ffba1a;
    text-decoration: none;
    font-size: 0.75em;
    padding: 0.3rem;
    margin: 0 0.1rem; }
    .post-item .header .tag:hover {
      color: #ffba1a;
      background-color: #031b3f; }
.post-item .content a {
  color: #805900; }
.post-item .content h2 {
  margin: 2em 0 0 0; }
.post-item .content p {
  font-size: 1em;
  line-height: 1.4em;
  margin: 2em 0; }
.post-item .content ul li.no-style {
  list-style-type: none; }
.post-item .content img {
  border: 0.5em solid #ffba1a;
  border-radius: 1em;
  margin-left: auto;
  margin-right: auto;
  margin-bottom: 1rem;
  margin-top: 1rem;
  display: block; }

main.taxonomy > h1 {
  margin-bottom: 3rem; }

main.section > h1 {
  margin-bottom: 3rem; }


/*# sourceMappingURL=data:application/json;base64, */